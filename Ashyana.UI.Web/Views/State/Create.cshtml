@model Ashyana.UI.Web.Models.State

<script src="~/Scripts/bootstrap-filestyle.min.js"></script>
<body data-title="create_state">
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog " style="width:700px;">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">State </h4>
                </div>
                <div class="modal-body">

                    @using (Html.BeginForm("Create", "State", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="row">

                            <div class="form-horizontal">
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.StateName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                  

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.StateDesc, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-6">
                                                @Html.EditorFor(model => model.StateDesc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.StateDesc, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.countryID, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-6">
                                                <select class="form-control" id="ddlCountry"></select><br />
                                            </div>
                                        </div>
                                    </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="thumbnail">
                                            @if (TempData["stateImage"] != null)
                                            { <img id="user_img" src=@TempData["Image"]  style="height:100px;width:100px;" class="img-responsive pull-right img-thumbnail" alt="" />
                                            }
                                            else
                                            {  <img id="user_img" src="../images/uploads/upload.jpg" style="height:100px;width:100px;"  class="img-responsive pull-right img-thumbnail" alt="" />
                                            }

                                            <div class="form-group">
                                                <div class="col-md-8">
                                                    <input type="file" title="search image" class="filestyle" id="img_file" name="file" onchange="show(this)" />
                                                </div>
                                                @Html.ValidationMessageFor(model => model.StateImage, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                               
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-6">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        </div>

                    }

                    <div class="modal-footer">
                        <div>
                            @Html.ActionLink("Back to List", "Index")
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script type="text/javascript">
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }

    }

</script>
