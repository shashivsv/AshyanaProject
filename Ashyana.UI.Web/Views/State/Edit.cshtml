@model Ashyana.UI.Web.Models.State

@using (Html.BeginForm("Edit", "State", FormMethod.Post, new { enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog " style="width:680px;">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit </h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.StateID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StateName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StateDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StateDesc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StateDesc, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StateImage, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-sm-8">

                                @if (TempData["stateimage"] != null)
                                { <img id="user_img" src=@TempData["stateimage"] style="width:100px;" alt="" />
                                }
                                else
                                {  <img id="user_img" src="../images/uploads/upload.jpg" style="width:100px;" alt="" />
                                }
                            </div>

                            <div class="col-md-10">

                                <input type="file" title="search image" id="user_img" name="file" onchange="show(this)" />
                                @Html.ValidationMessageFor(model => model.StateImage, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.countryID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @if (ViewBag.countryDetails != null)
                                {
                                    //@Html.DropDownList("ddlCountry", (SelectList)ViewBag.countryDetails, "-Select-")
                                           @Html.DropDownListFor(model=>model.countryID, new SelectList(ViewBag.countryDetails, "Value", "Text", ViewBag.countryid), "-Select-")
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $('#myModal').modal("show");
    });
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }

    }

</script>