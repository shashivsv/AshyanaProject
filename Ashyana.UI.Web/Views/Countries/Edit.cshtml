@model Ashyana.UI.Web.Models.Country

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog " style="width:550px;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit </h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Edit", "Countries", FormMethod.Post, new { enctype="multipart/form-data"}))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.CountryID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CountryName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CountryDesc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CountryDesc, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryImage, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-sm-8">

                                @if (TempData["Image"] != null)
                                { <img id="user_img" src=@TempData["Image"] style="width:100px;" alt="" />
                                }
                                else
                                {  <img id="user_img" src="../images/uploads/upload.jpg" style="width:100px;" alt="" />
                                }
                            </div>

                            <div class="col-md-10">
                                @*@Html.EditorFor(model => model.CountryImage, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="file" title="search image" id="img_file" name="file" onchange="show(this)" />
                                @Html.ValidationMessageFor(model => model.CountryImage, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $('#myModal').modal("show");
    });

    </script>
<script type="text/javascript">
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }

    }
    $("#user_img").change(function () {
        show(this);
    });

</script>
