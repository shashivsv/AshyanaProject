@using PagedList;
@using PagedList.Mvc;

@{
    int counter = 1;

}
@*@model IPagedList<Ashyana.UI.Web.ViewModel.MyUserModel>*@
@model IEnumerable<Ashyana.UI.Web.ViewModel.MyUserModel>
<script src="~/Scripts/FilterData/jquery-3.3.1.js"></script>

<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />
<script src="~/Scripts/FilterData/jquery-3.3.1.js"></script>



<style type="text/css">
    .filter-table {
        margin-left: 0.5em;
        font-size: 1.8em;
        text-decoration: none;
    }

    }

    .fitler-table .quick:hover {
        text-decoration: underline;
    }

    td.alt {
        background-color: #ffc;
        background-color: rgba(255, 255, 0, 0.2);
    }
</style>


<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog " style="width:1200px;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">User List </h4>
            </div>
            <div class="modal-body">
                <a href="@Url.Action("Create", "Users")" class="btn btn-default">
                    <i class="glyphicon glyphicon-new-window"></i>
                    <span>
                        <strong>Create</strong>
                    </span>
                </a>

                <table class=" table table-striped table-bordered datatable">
                    <thead>
                        <tr>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().userID)*@
                                @Html.DisplayNameFor(model => model.userID)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().userFirstname)*@
                                @Html.DisplayNameFor(model => model.userFirstname)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().userLastname)*@
                                @Html.DisplayNameFor(model => model.userLastname)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().userEmailID)*@
                                @Html.DisplayNameFor(model => model.userEmailID)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().userContactno)*@
                                @Html.DisplayNameFor(model => model.userContactno)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().userName)*@
                                @Html.DisplayNameFor(model => model.userName)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().RoleID)*@
                                @Html.DisplayNameFor(model => model.RoleID)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().countryID)*@
                                @Html.DisplayNameFor(model => model.countryID)

                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().StateID)*@
                                @Html.DisplayNameFor(model => model.StateID)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.First().cityID)*@
                                @Html.DisplayNameFor(mdel => model.cityID)
                            </th>
                            <th>

                                <i class="glyphicon glyphicon-refresh"></i>
                                Edit

                            </th>

                            <th>

                                <i class="glyphicon glyphicon-remove"></i>
                                Delete

                            </th>

                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.userID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.userFirstname)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.userLastname)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.userEmailID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.userContactno)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.userName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Roles)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CountryName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StateName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CityName)
                                </td>



                                <td>
                                    <a class="btn btn-default" href="@Url.Action("Edit", "Users", new { id = item.userID })">
                                        <i class="glyphicon glyphicon-pencil"></i>
                                        Edit
                                    </a>
                                    @*@Html.ActionLink("Edit", "Edit", new { id = item.userID })*@
                                </td>

                                <td>
                                    <a class="btn btn-default" href="@Url.Action("Delete", "Users", new { id = item.userID })">
                                        <i class="glyphicon glyphicon-remove"></i>
                                        Delete
                                        @*@Html.ActionLink("Delete", "Delete", new { id = item.userID })*@
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>


                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    $(document).ready(function () {

        $("#myModal").modal('show');
        $('table').filterTable();
    });

</script>
<script src="@Url.Content("~/Scripts/filterData/jquery.filtertable.min.js")" type="text/javascript"> </script>

@*<script type="text/javascript">
        $(function () {

            $("#strSearch").autocomplete({

                source: function (request, response) {

                    $.ajax({
                        url: '/Users/Index/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            debugger;
                            response($.map(data, function (item) {
                                debugger;
                                return { label: item.userFirstname, value: item.userFirstname };
                               // return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, item) {
                    alert(e);
                    alert(item);
                    alert($("#hdnUsername").val(i.item.val));
                },
                minLength: 1
            });
        });
    </script>*@