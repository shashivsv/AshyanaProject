@model Ashyana.UI.Web.Models.SubLink

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog " style="width:500px;">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">List Details </h4>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">

                       
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                       

                        <div class="form-group">
                            @Html.LabelFor(model => model.subLinkName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.subLinkName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.subLinkName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.subLinkPath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.subLinkPath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.subLinkPath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.subLinkRank, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.subLinkRank, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.subLinkRank, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.subLinkView, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.subLinkView, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.subLinkView, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Update" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <div>
                            @Html.ActionLink("Back to List", "List", new {@class="btn btn-default" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
    </div>

   
}

    
    <script type="text/javascript">
        $(document).ready(function () {
            $("#myModal").modal('show');
        });

    </script>