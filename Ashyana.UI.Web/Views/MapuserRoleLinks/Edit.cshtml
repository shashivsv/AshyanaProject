@model Ashyana.UI.Web.Models.MapuserRoleLink

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog" style="width:1200px;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"> Map User Roles</h4>
            </div>

            <div class="modal-body">
                <p>
                    @Html.ActionLink("Create New", "Create")

                </p>
                @using (Html.BeginForm())
                {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>MapuserRoleLink</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.userLinkMapID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.roleID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.roleID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.roleID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.linkID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.linkID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.linkID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.subLinkID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.subLinkID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.subLinkID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sublinkView, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sublinkView, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sublinkView, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sublinkAdd, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sublinkAdd, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sublinkAdd, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sublinkUpdate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sublinkUpdate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sublinkUpdate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sublinkDelete, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sublinkDelete, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sublinkDelete, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sublinkPrint, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sublinkPrint, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sublinkPrint, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.linkCheck, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.linkCheck, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.linkCheck, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.subLinkcheck, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.subLinkcheck, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.subLinkcheck, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.linkCreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.linkCreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.linkCreatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.linkCreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.linkCreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.linkCreatedOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.linkDeletedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.linkDeletedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.linkDeletedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.linkDeletedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.linkDeletedOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.linkDeletedOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.linkUpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.linkUpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.linkUpdatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.linkUpdatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.linkUpdatedOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.linkUpdatedOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

                </div>

            </div>

        </div>
    </div>

</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#myModal").modal('show');
    });

</script>
