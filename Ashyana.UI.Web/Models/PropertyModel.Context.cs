//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ashyana.UI.Web.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AshyanaDBEntities : DbContext
    {
        public AshyanaDBEntities()
            : base("name=AshyanaDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agent> Agents { get; set; }
        public virtual DbSet<Building> Buildings { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<ContactInfo> ContactInfoes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Floor> Floors { get; set; }
        public virtual DbSet<Link> Links { get; set; }
        public virtual DbSet<Mail> Mails { get; set; }
        public virtual DbSet<MainMenu> MainMenus { get; set; }
        public virtual DbSet<MapRoleLink> MapRoleLinks { get; set; }
        public virtual DbSet<MapuserRoleLink> MapuserRoleLinks { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Property> Properties { get; set; }
        public virtual DbSet<PropertyType> PropertyTypes { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RoomType> RoomTypes { get; set; }
        public virtual DbSet<Search> Searches { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<SubLink> SubLinks { get; set; }
        public virtual DbSet<SubMenu> SubMenus { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<master> masters { get; set; }
        public virtual DbSet<Purchase> Purchases { get; set; }
    
        [DbFunction("AshyanaDBEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string list, string splitOn)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[AshyanaDBEntities].[Split](@List, @SplitOn)", listParameter, splitOnParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> U_sp_ActiveUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("U_sp_ActiveUser", userIDParameter);
        }
    
        public virtual ObjectResult<U_sp_AdminLinkDisplay_Result> U_sp_AdminLinkDisplay(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_AdminLinkDisplay_Result>("U_sp_AdminLinkDisplay", useridParameter);
        }
    
        public virtual ObjectResult<string> U_sp_AutoFillU(string text)
        {
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("U_sp_AutoFillU", textParameter);
        }
    
        public virtual ObjectResult<string> U_sp_AutoFillUActive(string text)
        {
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("U_sp_AutoFillUActive", textParameter);
        }
    
        public virtual ObjectResult<U_sp_BuildingDropDown_Result> U_sp_BuildingDropDown(Nullable<int> buildingID)
        {
            var buildingIDParameter = buildingID.HasValue ?
                new ObjectParameter("BuildingID", buildingID) :
                new ObjectParameter("BuildingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_BuildingDropDown_Result>("U_sp_BuildingDropDown", buildingIDParameter);
        }
    
        public virtual int U_sp_changePassword(Nullable<int> uid, string userpwd)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var userpwdParameter = userpwd != null ?
                new ObjectParameter("userpwd", userpwd) :
                new ObjectParameter("userpwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_changePassword", uidParameter, userpwdParameter);
        }
    
        public virtual ObjectResult<U_sp_CheckRight_Result> U_sp_CheckRight(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_CheckRight_Result>("U_sp_CheckRight", userIDParameter);
        }
    
        public virtual ObjectResult<U_sp_cityDropDown_Result> U_sp_cityDropDown(Nullable<int> cityid)
        {
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_cityDropDown_Result>("U_sp_cityDropDown", cityidParameter);
        }
    
        public virtual int U_sp_cityUpdateHome(Nullable<int> cityID, Nullable<int> cityforHome)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(int));
    
            var cityforHomeParameter = cityforHome.HasValue ?
                new ObjectParameter("cityforHome", cityforHome) :
                new ObjectParameter("cityforHome", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_cityUpdateHome", cityIDParameter, cityforHomeParameter);
        }
    
        public virtual ObjectResult<U_sp_countryDropDown_Result> U_sp_countryDropDown(Nullable<int> countryid)
        {
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_countryDropDown_Result>("U_sp_countryDropDown", countryidParameter);
        }
    
        public virtual int U_sp_DefaultRightsMenu(Nullable<int> userID, Nullable<int> roleID, Nullable<int> linkID, Nullable<int> sublinkID, Nullable<int> sublinkAdd, Nullable<int> linkCheck, Nullable<int> linkCreatedBy)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            var sublinkIDParameter = sublinkID.HasValue ?
                new ObjectParameter("sublinkID", sublinkID) :
                new ObjectParameter("sublinkID", typeof(int));
    
            var sublinkAddParameter = sublinkAdd.HasValue ?
                new ObjectParameter("sublinkAdd", sublinkAdd) :
                new ObjectParameter("sublinkAdd", typeof(int));
    
            var linkCheckParameter = linkCheck.HasValue ?
                new ObjectParameter("linkCheck", linkCheck) :
                new ObjectParameter("linkCheck", typeof(int));
    
            var linkCreatedByParameter = linkCreatedBy.HasValue ?
                new ObjectParameter("linkCreatedBy", linkCreatedBy) :
                new ObjectParameter("linkCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_DefaultRightsMenu", userIDParameter, roleIDParameter, linkIDParameter, sublinkIDParameter, sublinkAddParameter, linkCheckParameter, linkCreatedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> U_sp_DeleteUser(Nullable<int> userID, Nullable<int> userDeletedBy)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var userDeletedByParameter = userDeletedBy.HasValue ?
                new ObjectParameter("userDeletedBy", userDeletedBy) :
                new ObjectParameter("userDeletedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("U_sp_DeleteUser", userIDParameter, userDeletedByParameter);
        }
    
        public virtual ObjectResult<U_sp_floorDropDown_Result> U_sp_floorDropDown(Nullable<int> floortypeid)
        {
            var floortypeidParameter = floortypeid.HasValue ?
                new ObjectParameter("floortypeid", floortypeid) :
                new ObjectParameter("floortypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_floorDropDown_Result>("U_sp_floorDropDown", floortypeidParameter);
        }
    
        public virtual ObjectResult<U_sp_GetEmailID_Result> U_sp_GetEmailID(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_GetEmailID_Result>("U_sp_GetEmailID", emailParameter);
        }
    
        public virtual ObjectResult<U_sp_GetLinksubLinkByUserID_Result> U_sp_GetLinksubLinkByUserID(Nullable<int> userID, Nullable<int> roleID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_GetLinksubLinkByUserID_Result>("U_sp_GetLinksubLinkByUserID", userIDParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<U_sp_Getmenu_Result> U_sp_Getmenu(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_Getmenu_Result>("U_sp_Getmenu", uidParameter);
        }
    
        public virtual int U_sp_GetUserDetails(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_GetUserDetails", uidParameter);
        }
    
        public virtual int U_sp_InsertAgent(Nullable<int> agentID, string dealingIn, string propertyHandled, string locality, Nullable<int> cityID, Nullable<int> agentCreatedby)
        {
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("agentID", agentID) :
                new ObjectParameter("agentID", typeof(int));
    
            var dealingInParameter = dealingIn != null ?
                new ObjectParameter("dealingIn", dealingIn) :
                new ObjectParameter("dealingIn", typeof(string));
    
            var propertyHandledParameter = propertyHandled != null ?
                new ObjectParameter("propertyHandled", propertyHandled) :
                new ObjectParameter("propertyHandled", typeof(string));
    
            var localityParameter = locality != null ?
                new ObjectParameter("locality", locality) :
                new ObjectParameter("locality", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(int));
    
            var agentCreatedbyParameter = agentCreatedby.HasValue ?
                new ObjectParameter("agentCreatedby", agentCreatedby) :
                new ObjectParameter("agentCreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_InsertAgent", agentIDParameter, dealingInParameter, propertyHandledParameter, localityParameter, cityIDParameter, agentCreatedbyParameter);
        }
    
        public virtual int U_sp_InsertContactInfo(string contactName, string contactEmail, string contactNo, string contactdesc)
        {
            var contactNameParameter = contactName != null ?
                new ObjectParameter("contactName", contactName) :
                new ObjectParameter("contactName", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("contactEmail", contactEmail) :
                new ObjectParameter("contactEmail", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("contactNo", contactNo) :
                new ObjectParameter("contactNo", typeof(string));
    
            var contactdescParameter = contactdesc != null ?
                new ObjectParameter("contactdesc", contactdesc) :
                new ObjectParameter("contactdesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_InsertContactInfo", contactNameParameter, contactEmailParameter, contactNoParameter, contactdescParameter);
        }
    
        public virtual int U_sp_InsertSearch(Nullable<int> propertyID)
        {
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("propertyID", propertyID) :
                new ObjectParameter("propertyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_InsertSearch", propertyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> U_sp_InsertUpdatebuilding(Nullable<int> buildingTypeID, string buildingType, string buildingDesc, string buildingImage, Nullable<int> buildingCreatedBy)
        {
            var buildingTypeIDParameter = buildingTypeID.HasValue ?
                new ObjectParameter("buildingTypeID", buildingTypeID) :
                new ObjectParameter("buildingTypeID", typeof(int));
    
            var buildingTypeParameter = buildingType != null ?
                new ObjectParameter("buildingType", buildingType) :
                new ObjectParameter("buildingType", typeof(string));
    
            var buildingDescParameter = buildingDesc != null ?
                new ObjectParameter("buildingDesc", buildingDesc) :
                new ObjectParameter("buildingDesc", typeof(string));
    
            var buildingImageParameter = buildingImage != null ?
                new ObjectParameter("buildingImage", buildingImage) :
                new ObjectParameter("buildingImage", typeof(string));
    
            var buildingCreatedByParameter = buildingCreatedBy.HasValue ?
                new ObjectParameter("buildingCreatedBy", buildingCreatedBy) :
                new ObjectParameter("buildingCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("U_sp_InsertUpdatebuilding", buildingTypeIDParameter, buildingTypeParameter, buildingDescParameter, buildingImageParameter, buildingCreatedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> U_sp_InsertUpdateCity(Nullable<int> cityID, string cityname, string citydesc, Nullable<int> cityforHome, string cityimage, Nullable<int> countryID, Nullable<int> stateID, Nullable<int> citycreatedby)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(int));
    
            var citynameParameter = cityname != null ?
                new ObjectParameter("cityname", cityname) :
                new ObjectParameter("cityname", typeof(string));
    
            var citydescParameter = citydesc != null ?
                new ObjectParameter("citydesc", citydesc) :
                new ObjectParameter("citydesc", typeof(string));
    
            var cityforHomeParameter = cityforHome.HasValue ?
                new ObjectParameter("cityforHome", cityforHome) :
                new ObjectParameter("cityforHome", typeof(int));
    
            var cityimageParameter = cityimage != null ?
                new ObjectParameter("cityimage", cityimage) :
                new ObjectParameter("cityimage", typeof(string));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(int));
    
            var citycreatedbyParameter = citycreatedby.HasValue ?
                new ObjectParameter("citycreatedby", citycreatedby) :
                new ObjectParameter("citycreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("U_sp_InsertUpdateCity", cityIDParameter, citynameParameter, citydescParameter, cityforHomeParameter, cityimageParameter, countryIDParameter, stateIDParameter, citycreatedbyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> U_sp_InsertUpdateCountry(Nullable<int> countryid, string cOUNTRYNAME, string countrydesc, string countryimage, Nullable<int> countryCreatedby)
        {
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            var cOUNTRYNAMEParameter = cOUNTRYNAME != null ?
                new ObjectParameter("COUNTRYNAME", cOUNTRYNAME) :
                new ObjectParameter("COUNTRYNAME", typeof(string));
    
            var countrydescParameter = countrydesc != null ?
                new ObjectParameter("countrydesc", countrydesc) :
                new ObjectParameter("countrydesc", typeof(string));
    
            var countryimageParameter = countryimage != null ?
                new ObjectParameter("countryimage", countryimage) :
                new ObjectParameter("countryimage", typeof(string));
    
            var countryCreatedbyParameter = countryCreatedby.HasValue ?
                new ObjectParameter("CountryCreatedby", countryCreatedby) :
                new ObjectParameter("CountryCreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("U_sp_InsertUpdateCountry", countryidParameter, cOUNTRYNAMEParameter, countrydescParameter, countryimageParameter, countryCreatedbyParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> U_sp_InsertUpdateFloor(string floorTypeID, string floorType, string floorDesc, string floorImage, Nullable<int> floorCreatedBy)
        {
            var floorTypeIDParameter = floorTypeID != null ?
                new ObjectParameter("floorTypeID", floorTypeID) :
                new ObjectParameter("floorTypeID", typeof(string));
    
            var floorTypeParameter = floorType != null ?
                new ObjectParameter("floorType", floorType) :
                new ObjectParameter("floorType", typeof(string));
    
            var floorDescParameter = floorDesc != null ?
                new ObjectParameter("floorDesc", floorDesc) :
                new ObjectParameter("floorDesc", typeof(string));
    
            var floorImageParameter = floorImage != null ?
                new ObjectParameter("floorImage", floorImage) :
                new ObjectParameter("floorImage", typeof(string));
    
            var floorCreatedByParameter = floorCreatedBy.HasValue ?
                new ObjectParameter("floorCreatedBy", floorCreatedBy) :
                new ObjectParameter("floorCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("U_sp_InsertUpdateFloor", floorTypeIDParameter, floorTypeParameter, floorDescParameter, floorImageParameter, floorCreatedByParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> U_sp_InsertUpdateLink(Nullable<int> linkID, string linkName, string linkPath, Nullable<int> linkForHome, string linkDesc, Nullable<int> linkCreatedBy)
        {
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            var linkNameParameter = linkName != null ?
                new ObjectParameter("linkName", linkName) :
                new ObjectParameter("linkName", typeof(string));
    
            var linkPathParameter = linkPath != null ?
                new ObjectParameter("linkPath", linkPath) :
                new ObjectParameter("linkPath", typeof(string));
    
            var linkForHomeParameter = linkForHome.HasValue ?
                new ObjectParameter("linkForHome", linkForHome) :
                new ObjectParameter("linkForHome", typeof(int));
    
            var linkDescParameter = linkDesc != null ?
                new ObjectParameter("linkDesc", linkDesc) :
                new ObjectParameter("linkDesc", typeof(string));
    
            var linkCreatedByParameter = linkCreatedBy.HasValue ?
                new ObjectParameter("linkCreatedBy", linkCreatedBy) :
                new ObjectParameter("linkCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("U_sp_InsertUpdateLink", linkIDParameter, linkNameParameter, linkPathParameter, linkForHomeParameter, linkDescParameter, linkCreatedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> U_sp_InsertUpdateMapRoleLinkMap(Nullable<int> roleID, Nullable<int> linkID, Nullable<int> subLinkID, Nullable<int> sublinkAdd, Nullable<int> sublinkUpdate, Nullable<int> sublinkDelete, Nullable<int> sublinkCheck, Nullable<int> sublinkPrint, Nullable<int> linkCreatedBy, Nullable<int> linkCheck)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            var subLinkIDParameter = subLinkID.HasValue ?
                new ObjectParameter("subLinkID", subLinkID) :
                new ObjectParameter("subLinkID", typeof(int));
    
            var sublinkAddParameter = sublinkAdd.HasValue ?
                new ObjectParameter("sublinkAdd", sublinkAdd) :
                new ObjectParameter("sublinkAdd", typeof(int));
    
            var sublinkUpdateParameter = sublinkUpdate.HasValue ?
                new ObjectParameter("sublinkUpdate", sublinkUpdate) :
                new ObjectParameter("sublinkUpdate", typeof(int));
    
            var sublinkDeleteParameter = sublinkDelete.HasValue ?
                new ObjectParameter("sublinkDelete", sublinkDelete) :
                new ObjectParameter("sublinkDelete", typeof(int));
    
            var sublinkCheckParameter = sublinkCheck.HasValue ?
                new ObjectParameter("sublinkCheck", sublinkCheck) :
                new ObjectParameter("sublinkCheck", typeof(int));
    
            var sublinkPrintParameter = sublinkPrint.HasValue ?
                new ObjectParameter("sublinkPrint", sublinkPrint) :
                new ObjectParameter("sublinkPrint", typeof(int));
    
            var linkCreatedByParameter = linkCreatedBy.HasValue ?
                new ObjectParameter("linkCreatedBy", linkCreatedBy) :
                new ObjectParameter("linkCreatedBy", typeof(int));
    
            var linkCheckParameter = linkCheck.HasValue ?
                new ObjectParameter("linkCheck", linkCheck) :
                new ObjectParameter("linkCheck", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("U_sp_InsertUpdateMapRoleLinkMap", roleIDParameter, linkIDParameter, subLinkIDParameter, sublinkAddParameter, sublinkUpdateParameter, sublinkDeleteParameter, sublinkCheckParameter, sublinkPrintParameter, linkCreatedByParameter, linkCheckParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> U_sp_Insertupdateproperty(Nullable<int> propertyID, Nullable<int> propertyTypeID, string purchaseType, Nullable<decimal> propertyprice, string propertyarea, Nullable<int> bedroom, Nullable<int> countryid, Nullable<int> stateid, Nullable<int> cityid, string metro, string propertyaddress, string propertylocality, Nullable<int> pin, Nullable<int> propertyage, Nullable<decimal> propertytenure, string propertydesc, string propertyimage, Nullable<int> propertycreatedby)
        {
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("propertyID", propertyID) :
                new ObjectParameter("propertyID", typeof(int));
    
            var propertyTypeIDParameter = propertyTypeID.HasValue ?
                new ObjectParameter("propertyTypeID", propertyTypeID) :
                new ObjectParameter("propertyTypeID", typeof(int));
    
            var purchaseTypeParameter = purchaseType != null ?
                new ObjectParameter("purchaseType", purchaseType) :
                new ObjectParameter("purchaseType", typeof(string));
    
            var propertypriceParameter = propertyprice.HasValue ?
                new ObjectParameter("propertyprice", propertyprice) :
                new ObjectParameter("propertyprice", typeof(decimal));
    
            var propertyareaParameter = propertyarea != null ?
                new ObjectParameter("propertyarea", propertyarea) :
                new ObjectParameter("propertyarea", typeof(string));
    
            var bedroomParameter = bedroom.HasValue ?
                new ObjectParameter("bedroom", bedroom) :
                new ObjectParameter("bedroom", typeof(int));
    
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var metroParameter = metro != null ?
                new ObjectParameter("metro", metro) :
                new ObjectParameter("metro", typeof(string));
    
            var propertyaddressParameter = propertyaddress != null ?
                new ObjectParameter("propertyaddress", propertyaddress) :
                new ObjectParameter("propertyaddress", typeof(string));
    
            var propertylocalityParameter = propertylocality != null ?
                new ObjectParameter("propertylocality", propertylocality) :
                new ObjectParameter("propertylocality", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var propertyageParameter = propertyage.HasValue ?
                new ObjectParameter("propertyage", propertyage) :
                new ObjectParameter("propertyage", typeof(int));
    
            var propertytenureParameter = propertytenure.HasValue ?
                new ObjectParameter("propertytenure", propertytenure) :
                new ObjectParameter("propertytenure", typeof(decimal));
    
            var propertydescParameter = propertydesc != null ?
                new ObjectParameter("propertydesc", propertydesc) :
                new ObjectParameter("propertydesc", typeof(string));
    
            var propertyimageParameter = propertyimage != null ?
                new ObjectParameter("propertyimage", propertyimage) :
                new ObjectParameter("propertyimage", typeof(string));
    
            var propertycreatedbyParameter = propertycreatedby.HasValue ?
                new ObjectParameter("propertycreatedby", propertycreatedby) :
                new ObjectParameter("propertycreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("U_sp_Insertupdateproperty", propertyIDParameter, propertyTypeIDParameter, purchaseTypeParameter, propertypriceParameter, propertyareaParameter, bedroomParameter, countryidParameter, stateidParameter, cityidParameter, metroParameter, propertyaddressParameter, propertylocalityParameter, pinParameter, propertyageParameter, propertytenureParameter, propertydescParameter, propertyimageParameter, propertycreatedbyParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> U_sp_InsertUpdatePropertyType(Nullable<int> propertyTypeID, string propertyType, string propertyTypeDesc, Nullable<int> propertyTypeCreatedby)
        {
            var propertyTypeIDParameter = propertyTypeID.HasValue ?
                new ObjectParameter("PropertyTypeID", propertyTypeID) :
                new ObjectParameter("PropertyTypeID", typeof(int));
    
            var propertyTypeParameter = propertyType != null ?
                new ObjectParameter("PropertyType", propertyType) :
                new ObjectParameter("PropertyType", typeof(string));
    
            var propertyTypeDescParameter = propertyTypeDesc != null ?
                new ObjectParameter("PropertyTypeDesc", propertyTypeDesc) :
                new ObjectParameter("PropertyTypeDesc", typeof(string));
    
            var propertyTypeCreatedbyParameter = propertyTypeCreatedby.HasValue ?
                new ObjectParameter("PropertyTypeCreatedby", propertyTypeCreatedby) :
                new ObjectParameter("PropertyTypeCreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("U_sp_InsertUpdatePropertyType", propertyTypeIDParameter, propertyTypeParameter, propertyTypeDescParameter, propertyTypeCreatedbyParameter);
        }
    
        public virtual int U_sp_InsertUpdateRegistration(Nullable<int> userID, string userName, string userPassword, string userFirstname, string userLastname, Nullable<int> countryid, Nullable<int> stateid, Nullable<int> cityid, string userContactno, string userEmailID, Nullable<int> roleID, Nullable<int> usercreatedby)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            var userFirstnameParameter = userFirstname != null ?
                new ObjectParameter("userFirstname", userFirstname) :
                new ObjectParameter("userFirstname", typeof(string));
    
            var userLastnameParameter = userLastname != null ?
                new ObjectParameter("userLastname", userLastname) :
                new ObjectParameter("userLastname", typeof(string));
    
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var userContactnoParameter = userContactno != null ?
                new ObjectParameter("userContactno", userContactno) :
                new ObjectParameter("userContactno", typeof(string));
    
            var userEmailIDParameter = userEmailID != null ?
                new ObjectParameter("userEmailID", userEmailID) :
                new ObjectParameter("userEmailID", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var usercreatedbyParameter = usercreatedby.HasValue ?
                new ObjectParameter("usercreatedby", usercreatedby) :
                new ObjectParameter("usercreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_InsertUpdateRegistration", userIDParameter, userNameParameter, userPasswordParameter, userFirstnameParameter, userLastnameParameter, countryidParameter, stateidParameter, cityidParameter, userContactnoParameter, userEmailIDParameter, roleIDParameter, usercreatedbyParameter);
        }
    
        public virtual int U_sp_InsertUpdateRole(Nullable<int> roleID, string roleName, string roleDescription, Nullable<int> roleCreatedBy)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("roleDescription", roleDescription) :
                new ObjectParameter("roleDescription", typeof(string));
    
            var roleCreatedByParameter = roleCreatedBy.HasValue ?
                new ObjectParameter("roleCreatedBy", roleCreatedBy) :
                new ObjectParameter("roleCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_InsertUpdateRole", roleIDParameter, roleNameParameter, roleDescriptionParameter, roleCreatedByParameter);
        }
    
        public virtual int U_sp_InsertUpdateState(Nullable<int> stateID, string statename, string statedesc, string stateimage, Nullable<int> statecreatedby, Nullable<int> countryID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(int));
    
            var statenameParameter = statename != null ?
                new ObjectParameter("statename", statename) :
                new ObjectParameter("statename", typeof(string));
    
            var statedescParameter = statedesc != null ?
                new ObjectParameter("statedesc", statedesc) :
                new ObjectParameter("statedesc", typeof(string));
    
            var stateimageParameter = stateimage != null ?
                new ObjectParameter("stateimage", stateimage) :
                new ObjectParameter("stateimage", typeof(string));
    
            var statecreatedbyParameter = statecreatedby.HasValue ?
                new ObjectParameter("statecreatedby", statecreatedby) :
                new ObjectParameter("statecreatedby", typeof(int));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_InsertUpdateState", stateIDParameter, statenameParameter, statedescParameter, stateimageParameter, statecreatedbyParameter, countryIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> U_sp_InsertUpdateSubLink(Nullable<int> linkID, string subLinkName, string subLinkPath, Nullable<int> sublinkRank, Nullable<int> subLinkAdd, Nullable<int> subLinkUpdate, Nullable<int> subLinkDelete, Nullable<int> sublinkPrint, Nullable<int> sublinkCreatedBy)
        {
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            var subLinkNameParameter = subLinkName != null ?
                new ObjectParameter("subLinkName", subLinkName) :
                new ObjectParameter("subLinkName", typeof(string));
    
            var subLinkPathParameter = subLinkPath != null ?
                new ObjectParameter("subLinkPath", subLinkPath) :
                new ObjectParameter("subLinkPath", typeof(string));
    
            var sublinkRankParameter = sublinkRank.HasValue ?
                new ObjectParameter("sublinkRank", sublinkRank) :
                new ObjectParameter("sublinkRank", typeof(int));
    
            var subLinkAddParameter = subLinkAdd.HasValue ?
                new ObjectParameter("subLinkAdd", subLinkAdd) :
                new ObjectParameter("subLinkAdd", typeof(int));
    
            var subLinkUpdateParameter = subLinkUpdate.HasValue ?
                new ObjectParameter("subLinkUpdate", subLinkUpdate) :
                new ObjectParameter("subLinkUpdate", typeof(int));
    
            var subLinkDeleteParameter = subLinkDelete.HasValue ?
                new ObjectParameter("subLinkDelete", subLinkDelete) :
                new ObjectParameter("subLinkDelete", typeof(int));
    
            var sublinkPrintParameter = sublinkPrint.HasValue ?
                new ObjectParameter("sublinkPrint", sublinkPrint) :
                new ObjectParameter("sublinkPrint", typeof(int));
    
            var sublinkCreatedByParameter = sublinkCreatedBy.HasValue ?
                new ObjectParameter("sublinkCreatedBy", sublinkCreatedBy) :
                new ObjectParameter("sublinkCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("U_sp_InsertUpdateSubLink", linkIDParameter, subLinkNameParameter, subLinkPathParameter, sublinkRankParameter, subLinkAddParameter, subLinkUpdateParameter, subLinkDeleteParameter, sublinkPrintParameter, sublinkCreatedByParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> U_sp_InsertUpdateUser(Nullable<int> userID, string userName, string userFirstname, string userLastname, Nullable<int> countryid, Nullable<int> stateid, Nullable<int> cityid, string userEmailID, string userContactno, Nullable<int> roleID, string userPassword, Nullable<int> userCreatedBy)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var userFirstnameParameter = userFirstname != null ?
                new ObjectParameter("userFirstname", userFirstname) :
                new ObjectParameter("userFirstname", typeof(string));
    
            var userLastnameParameter = userLastname != null ?
                new ObjectParameter("userLastname", userLastname) :
                new ObjectParameter("userLastname", typeof(string));
    
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var userEmailIDParameter = userEmailID != null ?
                new ObjectParameter("userEmailID", userEmailID) :
                new ObjectParameter("userEmailID", typeof(string));
    
            var userContactnoParameter = userContactno != null ?
                new ObjectParameter("userContactno", userContactno) :
                new ObjectParameter("userContactno", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            var userCreatedByParameter = userCreatedBy.HasValue ?
                new ObjectParameter("userCreatedBy", userCreatedBy) :
                new ObjectParameter("userCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("U_sp_InsertUpdateUser", userIDParameter, userNameParameter, userFirstnameParameter, userLastnameParameter, countryidParameter, stateidParameter, cityidParameter, userEmailIDParameter, userContactnoParameter, roleIDParameter, userPasswordParameter, userCreatedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> U_sp_InsertUpdateUserRoleLinkMap(Nullable<int> roleID, Nullable<int> linkID, Nullable<int> subLinkID, Nullable<int> sublinkAdd, Nullable<int> sublinkUpdate, Nullable<int> sublinkDelete, Nullable<int> sublinkCheck, Nullable<int> sublinkPrint, Nullable<int> linkCreatedBy, Nullable<int> linkCheck, Nullable<int> uID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            var subLinkIDParameter = subLinkID.HasValue ?
                new ObjectParameter("subLinkID", subLinkID) :
                new ObjectParameter("subLinkID", typeof(int));
    
            var sublinkAddParameter = sublinkAdd.HasValue ?
                new ObjectParameter("sublinkAdd", sublinkAdd) :
                new ObjectParameter("sublinkAdd", typeof(int));
    
            var sublinkUpdateParameter = sublinkUpdate.HasValue ?
                new ObjectParameter("sublinkUpdate", sublinkUpdate) :
                new ObjectParameter("sublinkUpdate", typeof(int));
    
            var sublinkDeleteParameter = sublinkDelete.HasValue ?
                new ObjectParameter("sublinkDelete", sublinkDelete) :
                new ObjectParameter("sublinkDelete", typeof(int));
    
            var sublinkCheckParameter = sublinkCheck.HasValue ?
                new ObjectParameter("sublinkCheck", sublinkCheck) :
                new ObjectParameter("sublinkCheck", typeof(int));
    
            var sublinkPrintParameter = sublinkPrint.HasValue ?
                new ObjectParameter("sublinkPrint", sublinkPrint) :
                new ObjectParameter("sublinkPrint", typeof(int));
    
            var linkCreatedByParameter = linkCreatedBy.HasValue ?
                new ObjectParameter("linkCreatedBy", linkCreatedBy) :
                new ObjectParameter("linkCreatedBy", typeof(int));
    
            var linkCheckParameter = linkCheck.HasValue ?
                new ObjectParameter("linkCheck", linkCheck) :
                new ObjectParameter("linkCheck", typeof(int));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("U_sp_InsertUpdateUserRoleLinkMap", roleIDParameter, linkIDParameter, subLinkIDParameter, sublinkAddParameter, sublinkUpdateParameter, sublinkDeleteParameter, sublinkCheckParameter, sublinkPrintParameter, linkCreatedByParameter, linkCheckParameter, uIDParameter);
        }
    
        public virtual ObjectResult<U_sp_linkDropDown_Result> U_sp_linkDropDown(Nullable<int> linkid)
        {
            var linkidParameter = linkid.HasValue ?
                new ObjectParameter("linkid", linkid) :
                new ObjectParameter("linkid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_linkDropDown_Result>("U_sp_linkDropDown", linkidParameter);
        }
    
        public virtual int U_sp_linkUpdateHome(Nullable<int> linkID, Nullable<int> linkforHome, Nullable<int> linkCreatedBy)
        {
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            var linkforHomeParameter = linkforHome.HasValue ?
                new ObjectParameter("linkforHome", linkforHome) :
                new ObjectParameter("linkforHome", typeof(int));
    
            var linkCreatedByParameter = linkCreatedBy.HasValue ?
                new ObjectParameter("linkCreatedBy", linkCreatedBy) :
                new ObjectParameter("linkCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_linkUpdateHome", linkIDParameter, linkforHomeParameter, linkCreatedByParameter);
        }
    
        public virtual ObjectResult<U_sp_Login_Result> U_sp_Login(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_Login_Result>("U_sp_Login", userNameParameter, passwordParameter);
        }
    
        public virtual int U_sp_RoleDropDown(Nullable<int> roleID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_RoleDropDown", roleIDParameter);
        }
    
        public virtual int U_sp_SearchAgent(string dealingIn, string propertyHandled, string locality, string city)
        {
            var dealingInParameter = dealingIn != null ?
                new ObjectParameter("dealingIn", dealingIn) :
                new ObjectParameter("dealingIn", typeof(string));
    
            var propertyHandledParameter = propertyHandled != null ?
                new ObjectParameter("propertyHandled", propertyHandled) :
                new ObjectParameter("propertyHandled", typeof(string));
    
            var localityParameter = locality != null ?
                new ObjectParameter("locality", locality) :
                new ObjectParameter("locality", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SearchAgent", dealingInParameter, propertyHandledParameter, localityParameter, cityParameter);
        }
    
        public virtual int U_sp_SearchByCity(Nullable<int> cityID)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SearchByCity", cityIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SearchByUserFirstname_Result> U_sp_SearchByUserFirstname(string fname)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SearchByUserFirstname_Result>("U_sp_SearchByUserFirstname", fnameParameter);
        }
    
        public virtual int U_sp_SearchProperty(string purchaseType, string propertyType, string country)
        {
            var purchaseTypeParameter = purchaseType != null ?
                new ObjectParameter("purchaseType", purchaseType) :
                new ObjectParameter("purchaseType", typeof(string));
    
            var propertyTypeParameter = propertyType != null ?
                new ObjectParameter("propertyType", propertyType) :
                new ObjectParameter("propertyType", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SearchProperty", purchaseTypeParameter, propertyTypeParameter, countryParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectAllUser_Result> U_sp_SelectAllUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectAllUser_Result>("U_sp_SelectAllUser");
        }
    
        public virtual ObjectResult<U_sp_Selectbuilding_Result> U_sp_Selectbuilding(Nullable<int> buildingTypeID)
        {
            var buildingTypeIDParameter = buildingTypeID.HasValue ?
                new ObjectParameter("buildingTypeID", buildingTypeID) :
                new ObjectParameter("buildingTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_Selectbuilding_Result>("U_sp_Selectbuilding", buildingTypeIDParameter);
        }
    
        public virtual ObjectResult<U_sp_Selectcities_Result> U_sp_Selectcities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_Selectcities_Result>("U_sp_Selectcities");
        }
    
        public virtual ObjectResult<U_sp_SelectCity_Result> U_sp_SelectCity(Nullable<int> cityID)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectCity_Result>("U_sp_SelectCity", cityIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectCountry_Result> U_sp_SelectCountry(Nullable<int> countryID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectCountry_Result>("U_sp_SelectCountry", countryIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectDefaultMenu_Result> U_sp_SelectDefaultMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectDefaultMenu_Result>("U_sp_SelectDefaultMenu");
        }
    
        public virtual ObjectResult<U_sp_SelectFloor_Result> U_sp_SelectFloor(Nullable<int> floorTypeID)
        {
            var floorTypeIDParameter = floorTypeID.HasValue ?
                new ObjectParameter("floorTypeID", floorTypeID) :
                new ObjectParameter("floorTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectFloor_Result>("U_sp_SelectFloor", floorTypeIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectHomelink_Result> U_sp_SelectHomelink(Nullable<int> lID)
        {
            var lIDParameter = lID.HasValue ?
                new ObjectParameter("lID", lID) :
                new ObjectParameter("lID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectHomelink_Result>("U_sp_SelectHomelink", lIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectLink_Result> U_sp_SelectLink(Nullable<int> linkID)
        {
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectLink_Result>("U_sp_SelectLink", linkIDParameter);
        }
    
        public virtual ObjectResult<string> U_sp_SelectMail(Nullable<int> aID, Nullable<int> uID)
        {
            var aIDParameter = aID.HasValue ?
                new ObjectParameter("aID", aID) :
                new ObjectParameter("aID", typeof(int));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("uID", uID) :
                new ObjectParameter("uID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("U_sp_SelectMail", aIDParameter, uIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectMapRoleUser_Result> U_sp_SelectMapRoleUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectMapRoleUser_Result>("U_sp_SelectMapRoleUser");
        }
    
        public virtual int U_sp_SelectMapUserRole(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SelectMapUserRole", userIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectProperty_Result> U_sp_SelectProperty(Nullable<int> propertyCreatedby)
        {
            var propertyCreatedbyParameter = propertyCreatedby.HasValue ?
                new ObjectParameter("propertyCreatedby", propertyCreatedby) :
                new ObjectParameter("propertyCreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectProperty_Result>("U_sp_SelectProperty", propertyCreatedbyParameter);
        }
    
        public virtual int U_sp_SelectPropertyByID(Nullable<int> propertyID)
        {
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("propertyID", propertyID) :
                new ObjectParameter("propertyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SelectPropertyByID", propertyIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectPropertyTypeDropDown_Result> U_sp_SelectPropertyTypeDropDown(Nullable<int> propertyTypeID)
        {
            var propertyTypeIDParameter = propertyTypeID.HasValue ?
                new ObjectParameter("propertyTypeID", propertyTypeID) :
                new ObjectParameter("propertyTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectPropertyTypeDropDown_Result>("U_sp_SelectPropertyTypeDropDown", propertyTypeIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectPropetyType_Result> U_sp_SelectPropetyType(Nullable<int> propertyTypeID)
        {
            var propertyTypeIDParameter = propertyTypeID.HasValue ?
                new ObjectParameter("propertyTypeID", propertyTypeID) :
                new ObjectParameter("propertyTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectPropetyType_Result>("U_sp_SelectPropetyType", propertyTypeIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectRegister_Result> U_sp_SelectRegister(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectRegister_Result>("U_sp_SelectRegister", uidParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectRight_Result> U_sp_SelectRight(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectRight_Result>("U_sp_SelectRight", userIDParameter);
        }
    
        public virtual int U_sp_SelectRole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SelectRole");
        }
    
        public virtual ObjectResult<U_sp_SelectRoleLinkMap_Result> U_sp_SelectRoleLinkMap()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectRoleLinkMap_Result>("U_sp_SelectRoleLinkMap");
        }
    
        public virtual int U_sp_SelectRoleLinkMapDropDown(Nullable<int> linkID)
        {
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SelectRoleLinkMapDropDown", linkIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectSearch_Result> U_sp_SelectSearch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectSearch_Result>("U_sp_SelectSearch");
        }
    
        public virtual ObjectResult<U_sp_SelectState_Result> U_sp_SelectState(Nullable<int> stateID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectState_Result>("U_sp_SelectState", stateIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectSubLink_Result> U_sp_SelectSubLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectSubLink_Result>("U_sp_SelectSubLink");
        }
    
        public virtual int U_sp_SelectUser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SelectUser", idParameter);
        }
    
        public virtual int U_sp_SelectUserByID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_SelectUserByID", userIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SelectUserRoleMap_Result> U_sp_SelectUserRoleMap(Nullable<int> userID, Nullable<int> linkID, string flag)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SelectUserRoleMap_Result>("U_sp_SelectUserRoleMap", userIDParameter, linkIDParameter, flagParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> U_sp_sendmail(string maildesc, Nullable<int> userid, Nullable<int> propertyid, Nullable<int> mailcreatedby)
        {
            var maildescParameter = maildesc != null ?
                new ObjectParameter("maildesc", maildesc) :
                new ObjectParameter("maildesc", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var propertyidParameter = propertyid.HasValue ?
                new ObjectParameter("propertyid", propertyid) :
                new ObjectParameter("propertyid", typeof(int));
    
            var mailcreatedbyParameter = mailcreatedby.HasValue ?
                new ObjectParameter("mailcreatedby", mailcreatedby) :
                new ObjectParameter("mailcreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("U_sp_sendmail", maildescParameter, useridParameter, propertyidParameter, mailcreatedbyParameter);
        }
    
        public virtual ObjectResult<U_sp_stateDropDown_Result> U_sp_stateDropDown(Nullable<int> stateid)
        {
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_stateDropDown_Result>("U_sp_stateDropDown", stateidParameter);
        }
    
        public virtual ObjectResult<U_sp_SubLinkDropDown_Result> U_sp_SubLinkDropDown(Nullable<int> subLinkID)
        {
            var subLinkIDParameter = subLinkID.HasValue ?
                new ObjectParameter("subLinkID", subLinkID) :
                new ObjectParameter("subLinkID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SubLinkDropDown_Result>("U_sp_SubLinkDropDown", subLinkIDParameter);
        }
    
        public virtual ObjectResult<U_sp_SubLinkFromRoleLinkMap_Result> U_sp_SubLinkFromRoleLinkMap(string flag, Nullable<int> linkID, Nullable<int> roleID)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("LinkID", linkID) :
                new ObjectParameter("LinkID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<U_sp_SubLinkFromRoleLinkMap_Result>("U_sp_SubLinkFromRoleLinkMap", flagParameter, linkIDParameter, roleIDParameter);
        }
    
        public virtual int U_sp_updateLink(Nullable<int> linkID, string linkName, string linkPath, Nullable<int> linkForHome, string linkDesc, Nullable<int> linkCreatedBy)
        {
            var linkIDParameter = linkID.HasValue ?
                new ObjectParameter("linkID", linkID) :
                new ObjectParameter("linkID", typeof(int));
    
            var linkNameParameter = linkName != null ?
                new ObjectParameter("linkName", linkName) :
                new ObjectParameter("linkName", typeof(string));
    
            var linkPathParameter = linkPath != null ?
                new ObjectParameter("linkPath", linkPath) :
                new ObjectParameter("linkPath", typeof(string));
    
            var linkForHomeParameter = linkForHome.HasValue ?
                new ObjectParameter("linkForHome", linkForHome) :
                new ObjectParameter("linkForHome", typeof(int));
    
            var linkDescParameter = linkDesc != null ?
                new ObjectParameter("linkDesc", linkDesc) :
                new ObjectParameter("linkDesc", typeof(string));
    
            var linkCreatedByParameter = linkCreatedBy.HasValue ?
                new ObjectParameter("linkCreatedBy", linkCreatedBy) :
                new ObjectParameter("linkCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_updateLink", linkIDParameter, linkNameParameter, linkPathParameter, linkForHomeParameter, linkDescParameter, linkCreatedByParameter);
        }
    
        public virtual int U_sp_UpdateRole(Nullable<int> roleID, string roleName, string roleDescription)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("roleDescription", roleDescription) :
                new ObjectParameter("roleDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_UpdateRole", roleIDParameter, roleNameParameter, roleDescriptionParameter);
        }
    
        public virtual int U_sp_UpdateRoleLinkMap(Nullable<int> roleLinkMapID, Nullable<int> sublinkView, Nullable<int> sublinkAdd, Nullable<int> sublinkUpdate, Nullable<int> sublinkDelete, Nullable<int> sublinkPrint, Nullable<int> linkCheck, Nullable<int> sublinkCheck, Nullable<int> linkCreatedBy)
        {
            var roleLinkMapIDParameter = roleLinkMapID.HasValue ?
                new ObjectParameter("roleLinkMapID", roleLinkMapID) :
                new ObjectParameter("roleLinkMapID", typeof(int));
    
            var sublinkViewParameter = sublinkView.HasValue ?
                new ObjectParameter("sublinkView", sublinkView) :
                new ObjectParameter("sublinkView", typeof(int));
    
            var sublinkAddParameter = sublinkAdd.HasValue ?
                new ObjectParameter("sublinkAdd", sublinkAdd) :
                new ObjectParameter("sublinkAdd", typeof(int));
    
            var sublinkUpdateParameter = sublinkUpdate.HasValue ?
                new ObjectParameter("sublinkUpdate", sublinkUpdate) :
                new ObjectParameter("sublinkUpdate", typeof(int));
    
            var sublinkDeleteParameter = sublinkDelete.HasValue ?
                new ObjectParameter("sublinkDelete", sublinkDelete) :
                new ObjectParameter("sublinkDelete", typeof(int));
    
            var sublinkPrintParameter = sublinkPrint.HasValue ?
                new ObjectParameter("sublinkPrint", sublinkPrint) :
                new ObjectParameter("sublinkPrint", typeof(int));
    
            var linkCheckParameter = linkCheck.HasValue ?
                new ObjectParameter("linkCheck", linkCheck) :
                new ObjectParameter("linkCheck", typeof(int));
    
            var sublinkCheckParameter = sublinkCheck.HasValue ?
                new ObjectParameter("sublinkCheck", sublinkCheck) :
                new ObjectParameter("sublinkCheck", typeof(int));
    
            var linkCreatedByParameter = linkCreatedBy.HasValue ?
                new ObjectParameter("linkCreatedBy", linkCreatedBy) :
                new ObjectParameter("linkCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_UpdateRoleLinkMap", roleLinkMapIDParameter, sublinkViewParameter, sublinkAddParameter, sublinkUpdateParameter, sublinkDeleteParameter, sublinkPrintParameter, linkCheckParameter, sublinkCheckParameter, linkCreatedByParameter);
        }
    
        public virtual int U_sp_UpdateRoleLinkMapDropDown(string linkName)
        {
            var linkNameParameter = linkName != null ?
                new ObjectParameter("linkName", linkName) :
                new ObjectParameter("linkName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_UpdateRoleLinkMapDropDown", linkNameParameter);
        }
    
        public virtual int U_sp_UpdateSubLink(Nullable<int> subLinkID, Nullable<int> subLinkView, Nullable<int> subLinkAdd, Nullable<int> subLinkUpdate, Nullable<int> subLinkDelete, Nullable<int> sublinkPrint, Nullable<int> sublinkCreatedBy)
        {
            var subLinkIDParameter = subLinkID.HasValue ?
                new ObjectParameter("subLinkID", subLinkID) :
                new ObjectParameter("subLinkID", typeof(int));
    
            var subLinkViewParameter = subLinkView.HasValue ?
                new ObjectParameter("subLinkView", subLinkView) :
                new ObjectParameter("subLinkView", typeof(int));
    
            var subLinkAddParameter = subLinkAdd.HasValue ?
                new ObjectParameter("subLinkAdd", subLinkAdd) :
                new ObjectParameter("subLinkAdd", typeof(int));
    
            var subLinkUpdateParameter = subLinkUpdate.HasValue ?
                new ObjectParameter("subLinkUpdate", subLinkUpdate) :
                new ObjectParameter("subLinkUpdate", typeof(int));
    
            var subLinkDeleteParameter = subLinkDelete.HasValue ?
                new ObjectParameter("subLinkDelete", subLinkDelete) :
                new ObjectParameter("subLinkDelete", typeof(int));
    
            var sublinkPrintParameter = sublinkPrint.HasValue ?
                new ObjectParameter("sublinkPrint", sublinkPrint) :
                new ObjectParameter("sublinkPrint", typeof(int));
    
            var sublinkCreatedByParameter = sublinkCreatedBy.HasValue ?
                new ObjectParameter("sublinkCreatedBy", sublinkCreatedBy) :
                new ObjectParameter("sublinkCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_UpdateSubLink", subLinkIDParameter, subLinkViewParameter, subLinkAddParameter, subLinkUpdateParameter, subLinkDeleteParameter, sublinkPrintParameter, sublinkCreatedByParameter);
        }
    
        public virtual int U_sp_UpdateUserRoleLinkMap(Nullable<int> sublinkView, Nullable<int> sublinkAdd, Nullable<int> sublinkUpdate, Nullable<int> sublinkDelete, Nullable<int> linkCheck, Nullable<int> sublinkCheck, Nullable<int> sublinkPrint, Nullable<int> linkCreatedBy, Nullable<int> userlinkMapID)
        {
            var sublinkViewParameter = sublinkView.HasValue ?
                new ObjectParameter("sublinkView", sublinkView) :
                new ObjectParameter("sublinkView", typeof(int));
    
            var sublinkAddParameter = sublinkAdd.HasValue ?
                new ObjectParameter("sublinkAdd", sublinkAdd) :
                new ObjectParameter("sublinkAdd", typeof(int));
    
            var sublinkUpdateParameter = sublinkUpdate.HasValue ?
                new ObjectParameter("sublinkUpdate", sublinkUpdate) :
                new ObjectParameter("sublinkUpdate", typeof(int));
    
            var sublinkDeleteParameter = sublinkDelete.HasValue ?
                new ObjectParameter("sublinkDelete", sublinkDelete) :
                new ObjectParameter("sublinkDelete", typeof(int));
    
            var linkCheckParameter = linkCheck.HasValue ?
                new ObjectParameter("linkCheck", linkCheck) :
                new ObjectParameter("linkCheck", typeof(int));
    
            var sublinkCheckParameter = sublinkCheck.HasValue ?
                new ObjectParameter("sublinkCheck", sublinkCheck) :
                new ObjectParameter("sublinkCheck", typeof(int));
    
            var sublinkPrintParameter = sublinkPrint.HasValue ?
                new ObjectParameter("sublinkPrint", sublinkPrint) :
                new ObjectParameter("sublinkPrint", typeof(int));
    
            var linkCreatedByParameter = linkCreatedBy.HasValue ?
                new ObjectParameter("linkCreatedBy", linkCreatedBy) :
                new ObjectParameter("linkCreatedBy", typeof(int));
    
            var userlinkMapIDParameter = userlinkMapID.HasValue ?
                new ObjectParameter("userlinkMapID", userlinkMapID) :
                new ObjectParameter("userlinkMapID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_sp_UpdateUserRoleLinkMap", sublinkViewParameter, sublinkAddParameter, sublinkUpdateParameter, sublinkDeleteParameter, linkCheckParameter, sublinkCheckParameter, sublinkPrintParameter, linkCreatedByParameter, userlinkMapIDParameter);
        }
    
        public virtual int U_spUpdateRole(Nullable<int> roleid, string roleName, string roleDescription, Nullable<int> rolecreatedby)
        {
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("roleDescription", roleDescription) :
                new ObjectParameter("roleDescription", typeof(string));
    
            var rolecreatedbyParameter = rolecreatedby.HasValue ?
                new ObjectParameter("rolecreatedby", rolecreatedby) :
                new ObjectParameter("rolecreatedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("U_spUpdateRole", roleidParameter, roleNameParameter, roleDescriptionParameter, rolecreatedbyParameter);
        }
    
        public virtual ObjectResult<UM_sp_GetSublinkPermissions_Result> UM_sp_GetSublinkPermissions(string userID, string subLinkID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var subLinkIDParameter = subLinkID != null ?
                new ObjectParameter("SubLinkID", subLinkID) :
                new ObjectParameter("SubLinkID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UM_sp_GetSublinkPermissions_Result>("UM_sp_GetSublinkPermissions", userIDParameter, subLinkIDParameter);
        }
    
        public virtual int UM_sp_roleCreate(string roleName, string roleDescription, Nullable<int> roleCreatedBy)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("roleDescription", roleDescription) :
                new ObjectParameter("roleDescription", typeof(string));
    
            var roleCreatedByParameter = roleCreatedBy.HasValue ?
                new ObjectParameter("roleCreatedBy", roleCreatedBy) :
                new ObjectParameter("roleCreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UM_sp_roleCreate", roleNameParameter, roleDescriptionParameter, roleCreatedByParameter);
        }
    
      
    }
}
